{"ast":null,"code":"import { useEffect, useState, memo } from \"react\";\n\n//get resources from server\nasync function FetchResource(props) {\n  const url = 'http://localhost:8080' + props.resource;\n  const options = {\n    method: props.options.method,\n    headers: props.options.headers,\n    body: props.options.body\n  };\n\n  //remove body field from options(object)\n  if (options.body === undefined) {\n    delete options.body;\n  }\n\n  // useEffect(()=>{\n\n  return fetch(url, options).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      } else if (response.status === 401) {\n        //handles error thrown from server\n        return response.status + \" Unauthorized access\";\n      } else if (response.status === 404) {\n        return response.status + \" Page not found\";\n      } else {\n        return response.status + \" \" + response.statusText;\n      }\n    } catch {\n      return \"Error 503: Sorry! Server is Unavailable\";\n    }\n  });\n\n  // },[]);\n\n  // if(fetchedData === null) \n  //   return(\"Still loading\"); //return if data is still loading\n\n  // return fetchedData; //return if data is loaded\n}\n_c = FetchResource;\nexport default FetchResource;\nvar _c;\n$RefreshReg$(_c, \"FetchResource\");","map":{"version":3,"names":["useEffect","useState","memo","FetchResource","props","url","resource","options","method","headers","body","undefined","fetch","then","response","status","json","statusText"],"sources":["C:/Users/green/OneDrive/Desktop/online-selling-and-shopping/src/main/webapp/WEB-INF/view/shopparound-app/src/util/FetchResource.js"],"sourcesContent":["import { useEffect, useState, memo} from \"react\";\r\n\r\n//get resources from server\r\n async function FetchResource(props){\r\n  const url = 'http://localhost:8080' + props.resource;\r\n  const options = {\r\n    method: props.options.method,\r\n    headers: props.options.headers,\r\n    body: props.options.body\r\n  };\r\n\r\n  //remove body field from options(object)\r\n  if(options.body === undefined){\r\n    delete options.body;\r\n  }\r\n\r\n  // useEffect(()=>{\r\n\r\n   \r\n    return fetch(url, options).then((response)=>{\r\n      try {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 401) { //handles error thrown from server\r\n          return(response.status + \" Unauthorized access\");\r\n        } else if (response.status === 404) {\r\n          return(response.status + \" Page not found\");\r\n        } else {\r\n          return(response.status + \" \" + response.statusText);\r\n        }\r\n      } catch {\r\n       \r\n          return (\"Error 503: Sorry! Server is Unavailable\")\r\n        \r\n      }\r\n\r\n    });\r\n   \r\n\r\n  // },[]);\r\n\r\n  // if(fetchedData === null) \r\n  //   return(\"Still loading\"); //return if data is still loading\r\n\r\n\r\n  // return fetchedData; //return if data is loaded\r\n}\r\n\r\nexport default FetchResource;"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,IAAI,QAAO,OAAO;;AAEhD;AACC,eAAeC,aAAa,CAACC,KAAK,EAAC;EAClC,MAAMC,GAAG,GAAG,uBAAuB,GAAGD,KAAK,CAACE,QAAQ;EACpD,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAEJ,KAAK,CAACG,OAAO,CAACC,MAAM;IAC5BC,OAAO,EAAEL,KAAK,CAACG,OAAO,CAACE,OAAO;IAC9BC,IAAI,EAAEN,KAAK,CAACG,OAAO,CAACG;EACtB,CAAC;;EAED;EACA,IAAGH,OAAO,CAACG,IAAI,KAAKC,SAAS,EAAC;IAC5B,OAAOJ,OAAO,CAACG,IAAI;EACrB;;EAEA;;EAGE,OAAOE,KAAK,CAACP,GAAG,EAAEE,OAAO,CAAC,CAACM,IAAI,CAAEC,QAAQ,IAAG;IAC1C,IAAI;MACF,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3B,OAAOD,QAAQ,CAACE,IAAI,EAAE;MACxB,CAAC,MAAM,IAAIF,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAAE;QACpC,OAAOD,QAAQ,CAACC,MAAM,GAAG,sBAAsB;MACjD,CAAC,MAAM,IAAID,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAClC,OAAOD,QAAQ,CAACC,MAAM,GAAG,iBAAiB;MAC5C,CAAC,MAAM;QACL,OAAOD,QAAQ,CAACC,MAAM,GAAG,GAAG,GAAGD,QAAQ,CAACG,UAAU;MACpD;IACF,CAAC,CAAC,MAAM;MAEJ,OAAQ,yCAAyC;IAErD;EAEF,CAAC,CAAC;;EAGJ;;EAEA;EACA;;EAGA;AACF;AAAC,KA3Ced,aAAa;AA6C7B,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}